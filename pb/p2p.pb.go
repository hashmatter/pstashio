// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/p2p.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// a resource represents data to be requested, replicated and exchanged by the
// peers in the network. a resource contains a set of all the blocks that are
// the data itself.
type Resource struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Size                 int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Blocks               []*Block `protobuf:"bytes,3,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_faf6959bb89dc13d, []int{0}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Resource) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Resource) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

// a block is a "piece" of a resource. blocks in a given resource must have the
// same size (apart from the last one)
type Block struct {
	ResourceId           string   `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Size                 int32    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_faf6959bb89dc13d, []int{1}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Block) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Block) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

// a peer block is a tuple containing information for a peer to fetch and
// validate a block from a resources stored in a given peer.
type PeerBlockRequest struct {
	ResourceId           string   `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	BlockId              string   `protobuf:"bytes,2,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Addr                 string   `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	PeerPubkey           string   `protobuf:"bytes,4,opt,name=peer_pubkey,json=peerPubkey,proto3" json:"peer_pubkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerBlockRequest) Reset()         { *m = PeerBlockRequest{} }
func (m *PeerBlockRequest) String() string { return proto.CompactTextString(m) }
func (*PeerBlockRequest) ProtoMessage()    {}
func (*PeerBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_faf6959bb89dc13d, []int{2}
}

func (m *PeerBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerBlockRequest.Unmarshal(m, b)
}
func (m *PeerBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerBlockRequest.Marshal(b, m, deterministic)
}
func (m *PeerBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerBlockRequest.Merge(m, src)
}
func (m *PeerBlockRequest) XXX_Size() int {
	return xxx_messageInfo_PeerBlockRequest.Size(m)
}
func (m *PeerBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeerBlockRequest proto.InternalMessageInfo

func (m *PeerBlockRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *PeerBlockRequest) GetBlockId() string {
	if m != nil {
		return m.BlockId
	}
	return ""
}

func (m *PeerBlockRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *PeerBlockRequest) GetPeerPubkey() string {
	if m != nil {
		return m.PeerPubkey
	}
	return ""
}

// a replication manifest is a lkst of peer block requests which must be issued
// by the
type ReplicationManifest struct {
	BlockReq             []*PeerBlockRequest `protobuf:"bytes,1,rep,name=block_req,json=blockReq,proto3" json:"block_req,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ReplicationManifest) Reset()         { *m = ReplicationManifest{} }
func (m *ReplicationManifest) String() string { return proto.CompactTextString(m) }
func (*ReplicationManifest) ProtoMessage()    {}
func (*ReplicationManifest) Descriptor() ([]byte, []int) {
	return fileDescriptor_faf6959bb89dc13d, []int{3}
}

func (m *ReplicationManifest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationManifest.Unmarshal(m, b)
}
func (m *ReplicationManifest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationManifest.Marshal(b, m, deterministic)
}
func (m *ReplicationManifest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationManifest.Merge(m, src)
}
func (m *ReplicationManifest) XXX_Size() int {
	return xxx_messageInfo_ReplicationManifest.Size(m)
}
func (m *ReplicationManifest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationManifest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationManifest proto.InternalMessageInfo

func (m *ReplicationManifest) GetBlockReq() []*PeerBlockRequest {
	if m != nil {
		return m.BlockReq
	}
	return nil
}

func init() {
	proto.RegisterType((*Resource)(nil), "pb.Resource")
	proto.RegisterType((*Block)(nil), "pb.Block")
	proto.RegisterType((*PeerBlockRequest)(nil), "pb.PeerBlockRequest")
	proto.RegisterType((*ReplicationManifest)(nil), "pb.ReplicationManifest")
}

func init() { proto.RegisterFile("pb/p2p.proto", fileDescriptor_faf6959bb89dc13d) }

var fileDescriptor_faf6959bb89dc13d = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0x49, 0xe7, 0xc7, 0xc9, 0x1d, 0x11, 0x89, 0x2e, 0xe2, 0xca, 0xda, 0x55, 0x57, 0x15,
	0xc7, 0x37, 0x70, 0xe5, 0x80, 0xc2, 0x98, 0x17, 0x28, 0x4d, 0x73, 0x85, 0x30, 0xc3, 0x24, 0x4d,
	0xdb, 0x85, 0x6e, 0x7d, 0x71, 0xc9, 0x4d, 0xfd, 0xc1, 0x8d, 0xbb, 0x9b, 0x13, 0xf8, 0xbe, 0xc3,
	0x81, 0x53, 0xaf, 0x6f, 0xfd, 0xc6, 0x57, 0x3e, 0xb8, 0xc1, 0x89, 0xcc, 0xeb, 0xe2, 0x05, 0x56,
	0x0a, 0x7b, 0x37, 0x86, 0x16, 0xc5, 0x19, 0x64, 0xd6, 0x48, 0x96, 0xb3, 0x92, 0xab, 0xcc, 0x1a,
	0x21, 0x60, 0xde, 0xdb, 0x77, 0x94, 0x59, 0xce, 0xca, 0x85, 0xa2, 0x5b, 0xdc, 0xc0, 0x52, 0x1f,
	0x5c, 0xbb, 0xef, 0xe5, 0x2c, 0x9f, 0x95, 0xeb, 0x0d, 0xaf, 0xbc, 0xae, 0x1e, 0x62, 0xa2, 0xa6,
	0x8f, 0xe2, 0x09, 0x16, 0x14, 0x88, 0x6b, 0x58, 0x87, 0x89, 0x5d, 0x7f, 0x83, 0xe1, 0x2b, 0xda,
	0x9a, 0x49, 0x98, 0xf0, 0xbf, 0x85, 0xb3, 0x1f, 0x61, 0xf1, 0xc1, 0xe0, 0x7c, 0x87, 0x18, 0x92,
	0x03, 0xbb, 0x11, 0xfb, 0xe1, 0x7f, 0xf2, 0x15, 0xac, 0xa8, 0x4d, 0x3d, 0xf1, 0xb9, 0x3a, 0xa1,
	0xf7, 0x96, 0x24, 0x8d, 0x31, 0x81, 0x24, 0x5c, 0xd1, 0x1d, 0x79, 0x1e, 0x31, 0xd4, 0x7e, 0xd4,
	0x7b, 0x7c, 0x93, 0xf3, 0xc4, 0x8b, 0xd1, 0x8e, 0x92, 0xe2, 0x11, 0x2e, 0x14, 0xfa, 0x83, 0x6d,
	0x9b, 0xc1, 0xba, 0xe3, 0x73, 0x73, 0xb4, 0xaf, 0xb1, 0xc7, 0x1d, 0xf0, 0xa4, 0x09, 0xd8, 0x49,
	0x46, 0x83, 0x5c, 0xc6, 0x41, 0xfe, 0x16, 0x56, 0xa9, 0x8d, 0xc2, 0x4e, 0x2f, 0x69, 0xfb, 0xfb,
	0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8f, 0x7b, 0xe9, 0x58, 0x8b, 0x01, 0x00, 0x00,
}
